// <auto-generated />
using System;
using CodeFirstExample;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeFirstExample.Migrations
{
    [DbContext(typeof(OfficeContext))]
    [Migration("20210708143829_ChangeLengthAddressRollback")]
    partial class ChangeLengthAddressRollback
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CodeFirstExample.Models.DepartmentEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DepartmentNo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime");

                    b.Property<short>("RowStatus")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("TimeStatus")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("CodeFirstExample.Models.EmployeeEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeAddress")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastModifiedTime")
                        .HasColumnType("datetime");

                    b.Property<short>("RowStatus")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("TimeStatus")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CodeFirstExample.Models.EmployeeEntity", b =>
                {
                    b.HasOne("CodeFirstExample.Models.DepartmentEntity", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
